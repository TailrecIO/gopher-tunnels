Resources:
  GopherRegisterLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: gopher-register-${opt:stage, self:provider.stage}-lambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: gopher-register-${opt:stage, self:provider.stage}-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource:
                  - "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - "dynamodb:PutItem"
                Resource:
                  - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.config.dynamoDbTable}"
              - Effect: Allow
                Action:
                  - "sqs:GetQueueUrl"
                  - "sqs:CreateQueue"
                Resource:
                  -  "arn:aws:sqs:${opt:region, self:provider.region}:*:gopher_${opt:stage, self:provider.stage}_*"

  GopherWebhookLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: gopher-webhook-${opt:stage, self:provider.stage}-lambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: gopher-webhook-${opt:stage, self:provider.stage}-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            - "logs:DescribeLogStreams"
            Resource:
            - "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
            - "dynamodb:GetItem"
            Resource:
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.config.dynamoDbTable}"
          - Effect: Allow
            Action:
            - "sqs:GetQueueUrl"
            - "sqs:SendMessage"
            - "sqs:ReceiveMessage"
            - "sqs:DeleteMessage"
            - "sqs:CreateQueue"
            Resource:
            -  "arn:aws:sqs:${opt:region, self:provider.region}:*:gopher_${opt:stage, self:provider.stage}_*"

  GopherRespondLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: gopher-respond-${opt:stage, self:provider.stage}-lambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: gopher-respond-${opt:stage, self:provider.stage}-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            - "logs:DescribeLogStreams"
            Resource:
            - "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
            - "dynamodb:GetItem"
            Resource:
            - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.config.dynamoDbTable}"
          - Effect: Allow
            Action:
            - "sqs:GetQueueUrl"
            - "sqs:SendMessage"
            - "sqs:DeleteMessage"
            Resource:
            -  "arn:aws:sqs:${opt:region, self:provider.region}:*:gopher_${opt:stage, self:provider.stage}_*"

